<div class="inbox">
  <div class="wrapper">
    <table>
      <thead>
        <tr>
          <th class="sender-recipient">Sender</th>
          <th>Content</th>
          <th>Time</th>
        </tr>
      </thead>
      <tbody></tbody>
    </table>
    <div class="pagination"></div>
  </div>
</div>

<script>
  // Debug function to check all cookies
  console.log("All cookies:", document.cookie);

  function getCookie(name) {
    const value = `; ${document.cookie}`;
    const parts = value.split(`; ${name}=`);
    if (parts.length === 2) {
      const cookieValue = parts.pop().split(";").shift();
      console.log(`Found cookie ${name}:`, cookieValue);
      return cookieValue;
    }
    console.log(`Cookie ${name} not found`);
    return null;
  }

  const userCookie = getCookie("user");
  console.log("User cookie:", userCookie);

  let user;
  try {
    if (!userCookie) {
      throw new Error("No user cookie found");
    }
    user = JSON.parse(decodeURIComponent(userCookie));
    console.log("Parsed user:", user);

    // Check if user object has the expected properties
    if (!user.userId) {
      throw new Error("User object missing userId");
    }

    const tableBody = document.querySelector("tbody");
    const pagination = document.querySelector(".pagination");

    // Show loading state
    tableBody.innerHTML =
      '<tr><td colspan="3" style="text-align: center">Loading emails...</td></tr>';

    // Fetch emails with detailed logging
    console.log(`Fetching emails for user ID: ${user.userId}`);
    fetch(`/get/email/received-email/${user.userId}`, {
      credentials: "include",
    })
      .then((res) => {
        console.log("Fetch response status:", res.status);
        if (!res.ok) {
          throw new Error(`HTTP error! status: ${res.status}`);
        }
        return res.json();
      })
      .then((data) => {
        console.log("Received email data:", data);
        let tableData = "";

        if (!Array.isArray(data) || data.length === 0) {
          tableData = `<tr><td colspan="3" style="text-align: center">No emails found</td></tr>`;
          tableBody.innerHTML = tableData;
          return;
        }

        const totalPage = Math.ceil(data.length / 5);
        const queryParams = new URLSearchParams(window.location.search);
        const currentPage = parseInt(queryParams.get("page")) || 1;
        console.log("Current page:", currentPage);

        // Render pagination
        let paginationPage = "";
        for (let i = 1; i <= totalPage; i++) {
          paginationPage += `<a href="/inbox?page=${i}" class="${
            i === currentPage ? "active" : ""
          }">${i}</a>`;
        }
        pagination.innerHTML = paginationPage;

        // Render email rows for the current page
        data.forEach((row, index) => {
          if ((currentPage - 1) * 5 <= index && index < currentPage * 5) {
            const time = new Date(row.sent_at);
            tableData += `
              <tr>
                <td class="sender-recipient">${row.sender}</td>
                <td>
                  <div class="subject">
                    <a style="font-weight: bold" href="/email-detail/${
                      row.emailId
                    }">
                      ${row.subject || "No subject"}
                    </a>
                  </div>
                  <div class="body">${row.body}</div>
                </td>
                <td>${time.toLocaleString("en-us", {
                  month: "short",
                  day: "numeric",
                  year: "numeric",
                })}</td>
              </tr>
            `;
          }
        });

        tableBody.innerHTML = tableData;
      })
      .catch((err) => {
        console.error("Error in email fetch process:", err);
        tableBody.innerHTML = `
          <tr><td colspan="3" style="text-align: center">Error loading emails: ${err.message}</td></tr>
        `;
      });
  } catch (error) {
    console.error("Error in script execution:", error);
    document.querySelector("tbody").innerHTML = `
      <tr><td colspan="3" style="text-align: center">Error: ${error.message}</td></tr>
    `;
  }
</script>
